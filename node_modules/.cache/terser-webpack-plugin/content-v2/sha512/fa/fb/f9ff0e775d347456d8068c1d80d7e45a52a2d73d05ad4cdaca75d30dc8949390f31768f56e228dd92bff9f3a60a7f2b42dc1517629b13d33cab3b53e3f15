{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{575:function(o,n,e){\"use strict\";e.r(n);var r=e(5),t=Object(r.a)({},(function(){var o=this,n=o.$createElement,e=o._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":o.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"abbrev-js\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#abbrev-js\"}},[o._v(\"#\")]),o._v(\" abbrev-js\")]),o._v(\" \"),e(\"p\",[o._v(\"Just like \"),e(\"a\",{attrs:{href:\"http://apidock.com/ruby/Abbrev\",target:\"_blank\",rel:\"noopener noreferrer\"}},[o._v(\"ruby's Abbrev\"),e(\"OutboundLink\")],1),o._v(\".\")]),o._v(\" \"),e(\"p\",[o._v(\"Usage:\")]),o._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",[e(\"code\",[o._v(\"var abbrev = require(\\\"abbrev\\\");\\nabbrev(\\\"foo\\\", \\\"fool\\\", \\\"folding\\\", \\\"flop\\\");\\n\\n// returns:\\n{ fl: 'flop'\\n, flo: 'flop'\\n, flop: 'flop'\\n, fol: 'folding'\\n, fold: 'folding'\\n, foldi: 'folding'\\n, foldin: 'folding'\\n, folding: 'folding'\\n, foo: 'foo'\\n, fool: 'fool'\\n}\\n\")])])]),e(\"p\",[o._v(\"This is handy for command-line scripts, or other cases where you want to be able to accept shorthands.\")])])}),[],!1,null,null,null);n.default=t.exports}}]);","extractedComments":[]}