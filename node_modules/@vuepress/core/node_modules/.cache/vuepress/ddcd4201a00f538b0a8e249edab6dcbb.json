{"remainingRequest":"/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/vuepress-theme-reco/components/Common.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/vuepress-theme-reco/components/Common.vue","mtime":1637579472420},{"path":"/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1637579466482},{"path":"/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/babel-loader/lib/index.js","mtime":1637579466363},{"path":"/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1637579466482},{"path":"/Users/linqixing/Documents/blog/kying-star.github.io/node_modules/vue-loader/lib/index.js","mtime":1637579472194}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2YmFyJwppbXBvcnQgU2lkZWJhciBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TaWRlYmFyJwppbXBvcnQgUGVyc29uYWxJbmZvIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1BlcnNvbmFsSW5mbycKaW1wb3J0IFBhc3N3b3JkIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1Bhc3N3b3JkJwppbXBvcnQgeyBzZXRUaW1lb3V0IH0gZnJvbSAndGltZXJzJwppbXBvcnQgbW9kdWxlVHJhbnNpdG9uTWl4aW4gZnJvbSAnQHRoZW1lL21peGlucy9tb2R1bGVUcmFuc2l0b24nCgpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbbW9kdWxlVHJhbnNpdG9uTWl4aW5dLAoKICBjb21wb25lbnRzOiB7IFNpZGViYXIsIE5hdmJhciwgUGFzc3dvcmQsIFBlcnNvbmFsSW5mbyB9LAoKICBwcm9wczogewogICAgc2lkZWJhcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgc2lkZWJhckl0ZW1zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfQogIH0sCgogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNTaWRlYmFyT3BlbjogZmFsc2UsCiAgICAgIGlzSGFzS2V5OiB0cnVlLAogICAgICBpc0hhc1BhZ2VLZXk6IHRydWUsCiAgICAgIGZpcnN0TG9hZDogdHJ1ZQogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBhYnNvbHV0ZUVuY3J5cHRpb24gKCkgewogICAgICByZXR1cm4gdGhpcy4kdGhlbWVDb25maWcua2V5UGFnZSAmJiB0aGlzLiR0aGVtZUNvbmZpZy5rZXlQYWdlLmFic29sdXRlRW5jcnlwdGlvbiA9PT0gdHJ1ZQogICAgfSwKCiAgICBzaG91bGRTaG93TmF2YmFyICgpIHsKICAgICAgY29uc3QgeyB0aGVtZUNvbmZpZyB9ID0gdGhpcy4kc2l0ZQogICAgICBjb25zdCB7IGZyb250bWF0dGVyIH0gPSB0aGlzLiRwYWdlCgogICAgICBpZiAoCiAgICAgICAgZnJvbnRtYXR0ZXIubmF2YmFyID09PSBmYWxzZSB8fAogICAgICAgIHRoZW1lQ29uZmlnLm5hdmJhciA9PT0gZmFsc2UKICAgICAgKSByZXR1cm4gZmFsc2UKCiAgICAgIHJldHVybiAoCiAgICAgICAgdGhpcy4kdGl0bGUgfHwKICAgICAgICB0aGVtZUNvbmZpZy5sb2dvIHx8CiAgICAgICAgdGhlbWVDb25maWcucmVwbyB8fAogICAgICAgIHRoZW1lQ29uZmlnLm5hdiB8fAogICAgICAgIHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLm5hdgogICAgICApCiAgICB9LAoKICAgIHNob3VsZFNob3dTaWRlYmFyICgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2lkZWJhckl0ZW1zLmxlbmd0aCA+IDAKICAgIH0sCgogICAgcGFnZUNsYXNzZXMgKCkgewogICAgICBjb25zdCB1c2VyUGFnZUNsYXNzID0gdGhpcy4kZnJvbnRtYXR0ZXIucGFnZUNsYXNzCiAgICAgIHJldHVybiBbCiAgICAgICAgewogICAgICAgICAgJ25vLW5hdmJhcic6ICF0aGlzLnNob3VsZFNob3dOYXZiYXIsCiAgICAgICAgICAnc2lkZWJhci1vcGVuJzogdGhpcy5pc1NpZGViYXJPcGVuLAogICAgICAgICAgJ25vLXNpZGViYXInOiAhdGhpcy5zaG91bGRTaG93U2lkZWJhcgogICAgICAgIH0sCiAgICAgICAgdXNlclBhZ2VDbGFzcwogICAgICBdCiAgICB9CiAgfSwKCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLiRyb3V0ZXIuYWZ0ZXJFYWNoKCgpID0+IHsKICAgICAgdGhpcy5pc1NpZGViYXJPcGVuID0gZmFsc2UKICAgIH0pCgogICAgdGhpcy5oYXNLZXkoKQogICAgdGhpcy5oYXNQYWdlS2V5KCkKICAgIHRoaXMuaGFuZGxlTG9hZGluZygpCiAgfSwKCiAgbWV0aG9kczogewogICAgaGFzS2V5ICgpIHsKICAgICAgY29uc3Qga2V5UGFnZSA9IHRoaXMuJHRoZW1lQ29uZmlnLmtleVBhZ2UKICAgICAgaWYgKCFrZXlQYWdlIHx8ICFrZXlQYWdlLmtleXMgfHwga2V5UGFnZS5rZXlzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMuaXNIYXNLZXkgPSB0cnVlCiAgICAgICAgcmV0dXJuCiAgICAgIH0KCiAgICAgIGxldCB7IGtleXMgfSA9IGtleVBhZ2UKICAgICAga2V5cyA9IGtleXMubWFwKGl0ZW0gPT4gaXRlbS50b0xvd2VyQ2FzZSgpKQogICAgICB0aGlzLmlzSGFzS2V5ID0ga2V5cyAmJiBrZXlzLmluZGV4T2Yoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgna2V5JykpID4gLTEKICAgIH0sCiAgICBoYXNQYWdlS2V5ICgpIHsKICAgICAgbGV0IHBhZ2VLZXlzID0gdGhpcy4kZnJvbnRtYXR0ZXIua2V5cwogICAgICBpZiAoIXBhZ2VLZXlzIHx8IHBhZ2VLZXlzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMuaXNIYXNQYWdlS2V5ID0gdHJ1ZQogICAgICAgIHJldHVybgogICAgICB9CgogICAgICBwYWdlS2V5cyA9IHBhZ2VLZXlzLm1hcChpdGVtID0+IGl0ZW0udG9Mb3dlckNhc2UoKSkKCiAgICAgIHRoaXMuaXNIYXNQYWdlS2V5ID0gcGFnZUtleXMuaW5kZXhPZihzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGBwYWdlS2V5JHt3aW5kb3cubG9jYXRpb24ucGF0aG5hbWV9YCkpID4gLTEKICAgIH0sCiAgICB0b2dnbGVTaWRlYmFyICh0bykgewogICAgICB0aGlzLmlzU2lkZWJhck9wZW4gPSB0eXBlb2YgdG8gPT09ICdib29sZWFuJyA/IHRvIDogIXRoaXMuaXNTaWRlYmFyT3BlbgogICAgfSwKCiAgICAvLyBzaWRlIHN3aXBlCiAgICBvblRvdWNoU3RhcnQgKGUpIHsKICAgICAgdGhpcy50b3VjaFN0YXJ0ID0gewogICAgICAgIHg6IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WCwKICAgICAgICB5OiBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFkKICAgICAgfQogICAgfSwKCiAgICBvblRvdWNoRW5kIChlKSB7CiAgICAgIGNvbnN0IGR4ID0gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYIC0gdGhpcy50b3VjaFN0YXJ0LngKICAgICAgY29uc3QgZHkgPSBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFkgLSB0aGlzLnRvdWNoU3RhcnQueQogICAgICBpZiAoTWF0aC5hYnMoZHgpID4gTWF0aC5hYnMoZHkpICYmIE1hdGguYWJzKGR4KSA+IDQwKSB7CiAgICAgICAgaWYgKGR4ID4gMCAmJiB0aGlzLnRvdWNoU3RhcnQueCA8PSA4MCkgewogICAgICAgICAgdGhpcy50b2dnbGVTaWRlYmFyKHRydWUpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMudG9nZ2xlU2lkZWJhcihmYWxzZSkKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgaGFuZGxlTG9hZGluZyAoKSB7CiAgICAgIGNvbnN0IHRpbWUgPSB0aGlzLiRmcm9udG1hdHRlci5ob21lICYmIHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2ZpcnN0TG9hZCcpID09IHVuZGVmaW5lZCA/IDEwMDAgOiAwCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMuZmlyc3RMb2FkID0gZmFsc2UKICAgICAgICBpZiAoc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnZmlyc3RMb2FkJykgPT0gdW5kZWZpbmVkKSBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKCdmaXJzdExvYWQnLCBmYWxzZSkKICAgICAgfSwgdGltZSkKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgJGZyb250bWF0dGVyIChuZXdWYWwsIG9sZFZhbCkgewogICAgICB0aGlzLmhhc0tleSgpCiAgICAgIHRoaXMuaGFzUGFnZUtleSgpCiAgICB9CiAgfQp9Cg=="},null]}